#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#define MXN 5007
using namespace std;
typedef long long ll;
const ll MOD = 1 << 30;
int prime[MXN];
char isprime[MXN];
int tot = 0;
void genPrime() {
    isprime[0] = isprime[1] = false;
    memset(isprime, 0xff, sizeof(isprime));
    for (int i = 2; i <= 5003; ++i) {
        if (isprime[i]) {
            prime[tot++] = i;
        }
        for (int j = 0; j < tot; ++j) {
            if (prime[j] * i > 5003) break;
            isprime[prime[j] * i] = 0;
            if (i % prime[j] == 0) break;
        }
    }
}
ll d(ll res, int stp) {
    int rtn = 1;
    for (int i = stp; i < tot; ++i) {
        if (res % prime[i] == 0) {
            while (res % prime[i] == 0) {
                ++rtn;
                res /= prime[i];
            }
            return rtn * d(res, stp + 1) % MOD;
        }
    }
    return 1;
}
inline ll getll() {
    static ll rtn, f;
    static char ch;
    rtn = 0; f = 1;
    while ((ch = getchar()) < '0' || ch > '9') if (ch == '-') f = -f;
    rtn = ch - '0';
    while ((ch = getchar()) >= '0' && ch <= '9') rtn = rtn * 10 + ch - '0';
    return rtn * f;
}
inline int getint() {
    static int rtn, f;
    static char ch;
    rtn = 0; f = 1;
    while ((ch = getchar()) < '0' || ch > '9') if (ch == '-') f = -f;
    rtn = ch - '0';
    while ((ch = getchar()) >= '0' && ch <= '9') rtn = rtn * 10 + ch - '0';
    return rtn * f;
}
int main() {
    genPrime();
    int n, a, b, c;
    // n = getint();
    a = getll(); b = getll(); c = getll();
    ll resu = 0;
    for (int i = 1; i <= a; ++i) {
        for (int j = 1; j <= b; ++j) {
            for (int k = 1; k <= c; ++k) {
                resu = (resu + d((ll)i * j * k, 0)) % MOD;
            }
        }
    }
    cout << resu << endl;
    // for (int i = 0; i < 20; ++i)
    //     cout << prime[i] << endl;
    return 0;
}