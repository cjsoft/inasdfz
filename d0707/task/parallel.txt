输入数据:parallel.in
输出数据:parallel.out


你对并行程序产生了兴趣，现在你有一个简单的语言，这个语言只有一个寄存器和三种指令：
0，将寄存器置为0。
1，将寄存器置为1。
?，输出寄存器的值。
其中，初始时寄存器总是置为0。

现在你有两段这个语言构成的程序S1和S2，分别为只包含0,1和?的字符串。
你将两个程序在一个处理器上并行执行，即同一时刻只运行某个程序，但是有可能在两个程序间来回切换。
由于处理器调度的随意性，可能运行多次可能产生不同的结果。

如S1为1?。S2为?0。
              __
则可能的运行序列为：
?01?        输出01
__
?10?        输出00
_ _
?1?0        输出01
_  _
1?0?        输出10
 __
1??0        输出11
 _ _
1??0        输出11
  __


现在，给定长度L和长度为L的坏字符串B，以及若干长度为L的字符串组成的好字符串集合G。
要求你输出两段程序S1和S2，使得你输出的程序的可能运行结果中不包含字符串B，且包含尽可能多的G中的字符串。

输入：
第一行两个整数N和L，表示G中字符串个数和字符串长度。
第二行N个长度为L的字符串，表示集合G中的字符串。
第三行一个长度为L的字符串，表示坏字符串B。

输出：
输出两行，分别为两段程序S1和S2。

样例输入：
3 2
11 10 00
01

样例输出：
1??
0

样例解释：
有四种输出结果:
1??0        输出11
   _
1?0?        输出10
  _
10??        输出00
 _
01??        输出11
_

不包含B，包含所有G中字符串。

输出要求:
S1和S2不能为空。
1和S2只能包含0,1和?三种字符。
S1和S2的长度和不能超过200.

评分标准：
每个数据有两个阈值t1，t2，t3。
如果你的输出不合法，得0分。
如果你的输出合法，但是可能运行结果中包含了B，得0分。
如果你的输出合法，且可能运行结果中不包含B，且包含了G中的n个字符串。
如果n<t1，得1分。
如果t1<=n<t2，得2分。
如果t2<=n<t3，得3分。
如果n=t3，得5分。
如果n>t3，得6分。
